
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author AYBUKE KECECI KANMAZ
 */
public class USG_Screen extends javax.swing.JFrame {

    /**
     * Creates new form USG_Screen
     */
    FileOperation io = new FileOperation();
    final JPopupMenu menu = new JPopupMenu("Menu");

    public USG_Screen() {
        initComponents();
        
        menu.add("TR").addActionListener((e) -> {
            LanguageManager.setLanguage("tr");
            updateTexts();
        });
        menu.add("EN").addActionListener((e) -> {
            LanguageManager.setLanguage("en");
            updateTexts();
        });
        
        epLabel.setText(LanguageManager.getText("sizeEP"));
        
        gsLabel.setText(LanguageManager.getText("gs"));
        yesGS_Radio.setText(LanguageManager.getText("yes"));
        noGS_Radio.setText(LanguageManager.getText("no"));
        
        ysLabel.setText(LanguageManager.getText("YS"));
        yesYS_Radio.setText(LanguageManager.getText("yes"));
        noYS_Radio.setText(LanguageManager.getText("no"));
        
        crlLabel.setText(LanguageManager.getText("CRL"));
        noCRL_Radio.setText(LanguageManager.getText("no"));
        yesCRL_Radio.setText(LanguageManager.getText("yes"));
        
        fkaLabel.setText(LanguageManager.getText("FKA"));
        yesFKA_Radio.setText(LanguageManager.getText("yes"));
        noFKA_Radio.setText(LanguageManager.getText("no"));
        
        freeFluidLabel.setText(LanguageManager.getText("freeFluid"));
        yesPresenceFreeLiquid_Radio.setText(LanguageManager.getText("yes"));
        noPresenceFreeLiquid_Radio.setText(LanguageManager.getText("no"));
        
        goToBio.setText(LanguageManager.getText("goBio"));
        
        this.setTitle(LanguageManager.getText("usgScreen"));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        buttonGroup5 = new javax.swing.ButtonGroup();
        settings = new javax.swing.JLabel();
        epLabel = new javax.swing.JLabel();
        gsLabel = new javax.swing.JLabel();
        ysLabel = new javax.swing.JLabel();
        crlLabel = new javax.swing.JLabel();
        fkaLabel = new javax.swing.JLabel();
        freeFluidLabel = new javax.swing.JLabel();
        yesGS_Radio = new javax.swing.JRadioButton();
        noGS_Radio = new javax.swing.JRadioButton();
        yesYS_Radio = new javax.swing.JRadioButton();
        noYS_Radio = new javax.swing.JRadioButton();
        yesCRL_Radio = new javax.swing.JRadioButton();
        noCRL_Radio = new javax.swing.JRadioButton();
        yesFKA_Radio = new javax.swing.JRadioButton();
        noFKA_Radio = new javax.swing.JRadioButton();
        yesPresenceFreeLiquid_Radio = new javax.swing.JRadioButton();
        noPresenceFreeLiquid_Radio = new javax.swing.JRadioButton();
        goToBio = new javax.swing.JButton();
        epSizeText = new javax.swing.JFormattedTextField();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        settings.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/settings.png"))); // NOI18N
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("Bundle"); // NOI18N
        settings.setText(bundle.getString("USG_Screen.settings.text")); // NOI18N
        settings.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                settingsMouseClicked(evt);
            }
        });
        getContentPane().add(settings, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 20, 40, 40));

        epLabel.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        epLabel.setForeground(new java.awt.Color(0, 64, 64));
        epLabel.setText(bundle.getString("USG_Screen.ysLabel.text_1")); // NOI18N
        epLabel.setToolTipText(bundle.getString("USG_Screen.epLabel.toolTipText")); // NOI18N
        getContentPane().add(epLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 160, 210, 30));

        gsLabel.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        gsLabel.setForeground(new java.awt.Color(0, 64, 64));
        gsLabel.setText(bundle.getString("USG_Screen.ysLabel.text_1")); // NOI18N
        gsLabel.setToolTipText(bundle.getString("USG_Screen.gsLabel.toolTipText")); // NOI18N
        getContentPane().add(gsLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 210, 210, 30));

        ysLabel.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        ysLabel.setForeground(new java.awt.Color(0, 64, 64));
        ysLabel.setText(bundle.getString("USG_Screen.ysLabel.text_1")); // NOI18N
        ysLabel.setToolTipText(bundle.getString("USG_Screen.ysLabel.toolTipText")); // NOI18N
        getContentPane().add(ysLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 260, 210, 30));

        crlLabel.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        crlLabel.setForeground(new java.awt.Color(0, 64, 64));
        crlLabel.setText(bundle.getString("USG_Screen.ysLabel.text_1")); // NOI18N
        crlLabel.setToolTipText(bundle.getString("USG_Screen.crlLabel.toolTipText")); // NOI18N
        getContentPane().add(crlLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 310, 210, 30));

        fkaLabel.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        fkaLabel.setForeground(new java.awt.Color(0, 64, 64));
        fkaLabel.setText(bundle.getString("USG_Screen.ysLabel.text_1")); // NOI18N
        fkaLabel.setToolTipText(bundle.getString("USG_Screen.fkaLabel.toolTipText")); // NOI18N
        getContentPane().add(fkaLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 360, 210, 30));

        freeFluidLabel.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        freeFluidLabel.setForeground(new java.awt.Color(0, 64, 64));
        freeFluidLabel.setText(bundle.getString("USG_Screen.ysLabel.text_1")); // NOI18N
        freeFluidLabel.setToolTipText(bundle.getString("USG_Screen.freeFluidLabel.toolTipText")); // NOI18N
        getContentPane().add(freeFluidLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 410, 210, 30));

        buttonGroup1.add(yesGS_Radio);
        yesGS_Radio.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        yesGS_Radio.setForeground(new java.awt.Color(0, 64, 64));
        yesGS_Radio.setText(bundle.getString("USG_Screen.yesPresenceFreeLiquid_Radio.text_1")); // NOI18N
        yesGS_Radio.setToolTipText(bundle.getString("USG_Screen.yesGS_Radio.toolTipText")); // NOI18N
        yesGS_Radio.setOpaque(false);
        yesGS_Radio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yesGS_RadioActionPerformed(evt);
            }
        });
        getContentPane().add(yesGS_Radio, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 210, -1, 30));

        buttonGroup1.add(noGS_Radio);
        noGS_Radio.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        noGS_Radio.setForeground(new java.awt.Color(0, 64, 64));
        noGS_Radio.setText(bundle.getString("USG_Screen.noFKA_Radio.text_1")); // NOI18N
        noGS_Radio.setOpaque(false);
        noGS_Radio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noGS_RadioActionPerformed(evt);
            }
        });
        getContentPane().add(noGS_Radio, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 210, -1, 30));

        buttonGroup2.add(yesYS_Radio);
        yesYS_Radio.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        yesYS_Radio.setForeground(new java.awt.Color(0, 64, 64));
        yesYS_Radio.setText(bundle.getString("USG_Screen.yesPresenceFreeLiquid_Radio.text_1")); // NOI18N
        yesYS_Radio.setToolTipText(bundle.getString("USG_Screen.yesYS_Radio.toolTipText")); // NOI18N
        yesYS_Radio.setOpaque(false);
        yesYS_Radio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yesYS_RadioActionPerformed(evt);
            }
        });
        getContentPane().add(yesYS_Radio, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 260, -1, 30));

        buttonGroup2.add(noYS_Radio);
        noYS_Radio.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        noYS_Radio.setForeground(new java.awt.Color(0, 64, 64));
        noYS_Radio.setText(bundle.getString("USG_Screen.noFKA_Radio.text_1")); // NOI18N
        noYS_Radio.setOpaque(false);
        noYS_Radio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noYS_RadioActionPerformed(evt);
            }
        });
        getContentPane().add(noYS_Radio, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 260, -1, 30));

        buttonGroup3.add(yesCRL_Radio);
        yesCRL_Radio.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        yesCRL_Radio.setForeground(new java.awt.Color(0, 64, 64));
        yesCRL_Radio.setText(bundle.getString("USG_Screen.yesPresenceFreeLiquid_Radio.text_1")); // NOI18N
        yesCRL_Radio.setToolTipText(bundle.getString("USG_Screen.yesCRL_Radio.toolTipText")); // NOI18N
        yesCRL_Radio.setOpaque(false);
        yesCRL_Radio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yesCRL_RadioActionPerformed(evt);
            }
        });
        getContentPane().add(yesCRL_Radio, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 310, -1, 30));

        buttonGroup3.add(noCRL_Radio);
        noCRL_Radio.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        noCRL_Radio.setForeground(new java.awt.Color(0, 64, 64));
        noCRL_Radio.setText(bundle.getString("USG_Screen.noFKA_Radio.text_1")); // NOI18N
        noCRL_Radio.setOpaque(false);
        noCRL_Radio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noCRL_RadioActionPerformed(evt);
            }
        });
        getContentPane().add(noCRL_Radio, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 310, -1, 30));

        buttonGroup4.add(yesFKA_Radio);
        yesFKA_Radio.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        yesFKA_Radio.setForeground(new java.awt.Color(0, 64, 64));
        yesFKA_Radio.setText(bundle.getString("USG_Screen.yesPresenceFreeLiquid_Radio.text_1")); // NOI18N
        yesFKA_Radio.setToolTipText(bundle.getString("USG_Screen.yesFKA_Radio.toolTipText")); // NOI18N
        yesFKA_Radio.setOpaque(false);
        yesFKA_Radio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yesFKA_RadioActionPerformed(evt);
            }
        });
        getContentPane().add(yesFKA_Radio, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 360, -1, 30));

        buttonGroup4.add(noFKA_Radio);
        noFKA_Radio.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        noFKA_Radio.setForeground(new java.awt.Color(0, 64, 64));
        noFKA_Radio.setText(bundle.getString("USG_Screen.noFKA_Radio.text_1")); // NOI18N
        noFKA_Radio.setOpaque(false);
        noFKA_Radio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noFKA_RadioActionPerformed(evt);
            }
        });
        getContentPane().add(noFKA_Radio, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 360, -1, 30));

        buttonGroup5.add(yesPresenceFreeLiquid_Radio);
        yesPresenceFreeLiquid_Radio.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        yesPresenceFreeLiquid_Radio.setForeground(new java.awt.Color(0, 64, 64));
        yesPresenceFreeLiquid_Radio.setText(bundle.getString("USG_Screen.yesPresenceFreeLiquid_Radio.text_1")); // NOI18N
        yesPresenceFreeLiquid_Radio.setToolTipText(bundle.getString("USG_Screen.yesPresenceFreeLiquid_Radio.toolTipText")); // NOI18N
        yesPresenceFreeLiquid_Radio.setOpaque(false);
        yesPresenceFreeLiquid_Radio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yesPresenceFreeLiquid_RadioActionPerformed(evt);
            }
        });
        getContentPane().add(yesPresenceFreeLiquid_Radio, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 410, -1, 30));

        buttonGroup5.add(noPresenceFreeLiquid_Radio);
        noPresenceFreeLiquid_Radio.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        noPresenceFreeLiquid_Radio.setForeground(new java.awt.Color(0, 64, 64));
        noPresenceFreeLiquid_Radio.setText(bundle.getString("USG_Screen.noFKA_Radio.text_1")); // NOI18N
        noPresenceFreeLiquid_Radio.setOpaque(false);
        noPresenceFreeLiquid_Radio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noPresenceFreeLiquid_RadioActionPerformed(evt);
            }
        });
        getContentPane().add(noPresenceFreeLiquid_Radio, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 410, -1, 30));

        goToBio.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        goToBio.setForeground(new java.awt.Color(0, 64, 64));
        goToBio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/bio_.png"))); // NOI18N
        goToBio.setText(bundle.getString("USG_Screen.ysLabel.text_1")); // NOI18N
        goToBio.setToolTipText(bundle.getString("USG_Screen.goToBio.toolTipText")); // NOI18N
        goToBio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goToBioActionPerformed(evt);
            }
        });
        getContentPane().add(goToBio, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 540, 620, 45));

        epSizeText.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        getContentPane().add(epSizeText, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 160, 290, 30));

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/hospital-background-1952.jpg"))); // NOI18N
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 816, 657));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void yesFKA_RadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yesFKA_RadioActionPerformed
        io.fka = String.valueOf(1);
    }//GEN-LAST:event_yesFKA_RadioActionPerformed

    private void goToBioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goToBioActionPerformed
        if (!epSizeText.getText().isEmpty()) {
            io.ep_size = epSizeText.getText();

            BioChemScreen bio = new BioChemScreen();

            if ((yesGS_Radio.isSelected() || noGS_Radio.isSelected()) && (yesYS_Radio.isSelected() || noYS_Radio.isSelected())
                    && (yesCRL_Radio.isSelected() || noCRL_Radio.isSelected())
                    && (yesFKA_Radio.isSelected() || noFKA_Radio.isSelected())
                    && (yesPresenceFreeLiquid_Radio.isSelected() || noPresenceFreeLiquid_Radio.isSelected())) {
                io.writeUSGFile();
                ImageIcon img = new ImageIcon("src\\images\\bio_.png");
                bio.setIconImage(img.getImage());
                bio.setVisible(true);
                this.dispose();
            } else {
                JOptionPane.showMessageDialog(null, "Check your choice!", "WARNING", JOptionPane.WARNING_MESSAGE);
            }
        } else
            JOptionPane.showMessageDialog(null, "Fill in the necessary empty spaces!", "WARNING", JOptionPane.WARNING_MESSAGE);
    }//GEN-LAST:event_goToBioActionPerformed

    private void yesGS_RadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yesGS_RadioActionPerformed
        io.gs = String.valueOf(1);
    }//GEN-LAST:event_yesGS_RadioActionPerformed

    private void noGS_RadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noGS_RadioActionPerformed
        io.gs = String.valueOf(0);
    }//GEN-LAST:event_noGS_RadioActionPerformed

    private void yesYS_RadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yesYS_RadioActionPerformed
        io.ys = String.valueOf(1);
    }//GEN-LAST:event_yesYS_RadioActionPerformed

    private void noYS_RadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noYS_RadioActionPerformed
        io.ys = String.valueOf(0);
    }//GEN-LAST:event_noYS_RadioActionPerformed

    private void yesCRL_RadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yesCRL_RadioActionPerformed
        io.crl = String.valueOf(1);
    }//GEN-LAST:event_yesCRL_RadioActionPerformed

    private void noCRL_RadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noCRL_RadioActionPerformed
        io.crl = String.valueOf(0);
    }//GEN-LAST:event_noCRL_RadioActionPerformed

    private void noFKA_RadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noFKA_RadioActionPerformed
        io.fka = String.valueOf(0);
    }//GEN-LAST:event_noFKA_RadioActionPerformed

    private void yesPresenceFreeLiquid_RadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yesPresenceFreeLiquid_RadioActionPerformed
        io.presence_free_liquid = String.valueOf(1);
    }//GEN-LAST:event_yesPresenceFreeLiquid_RadioActionPerformed

    private void noPresenceFreeLiquid_RadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noPresenceFreeLiquid_RadioActionPerformed
        io.presence_free_liquid = String.valueOf(0);
    }//GEN-LAST:event_noPresenceFreeLiquid_RadioActionPerformed

    private void settingsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_settingsMouseClicked
        menu.show(settings, settings.getWidth() / 2, settings.getHeight() / 2);
    }//GEN-LAST:event_settingsMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(USG_Screen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(USG_Screen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(USG_Screen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(USG_Screen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new USG_Screen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.ButtonGroup buttonGroup5;
    private javax.swing.JLabel crlLabel;
    private javax.swing.JLabel epLabel;
    private javax.swing.JFormattedTextField epSizeText;
    private javax.swing.JLabel fkaLabel;
    private javax.swing.JLabel freeFluidLabel;
    private javax.swing.JButton goToBio;
    private javax.swing.JLabel gsLabel;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JRadioButton noCRL_Radio;
    private javax.swing.JRadioButton noFKA_Radio;
    private javax.swing.JRadioButton noGS_Radio;
    private javax.swing.JRadioButton noPresenceFreeLiquid_Radio;
    private javax.swing.JRadioButton noYS_Radio;
    private javax.swing.JLabel settings;
    private javax.swing.JRadioButton yesCRL_Radio;
    private javax.swing.JRadioButton yesFKA_Radio;
    private javax.swing.JRadioButton yesGS_Radio;
    private javax.swing.JRadioButton yesPresenceFreeLiquid_Radio;
    private javax.swing.JRadioButton yesYS_Radio;
    private javax.swing.JLabel ysLabel;
    // End of variables declaration//GEN-END:variables

    private void updateTexts() {
        epLabel.setText(LanguageManager.getText("sizeEP"));
        
        gsLabel.setText(LanguageManager.getText("gs"));
        yesGS_Radio.setText(LanguageManager.getText("yes"));
        noGS_Radio.setText(LanguageManager.getText("no"));
        
        ysLabel.setText(LanguageManager.getText("YS"));
        yesYS_Radio.setText(LanguageManager.getText("yes"));
        noYS_Radio.setText(LanguageManager.getText("no"));
        
        crlLabel.setText(LanguageManager.getText("CRL"));
        noCRL_Radio.setText(LanguageManager.getText("no"));
        yesCRL_Radio.setText(LanguageManager.getText("yes"));
        
        fkaLabel.setText(LanguageManager.getText("FKA"));
        yesFKA_Radio.setText(LanguageManager.getText("yes"));
        noFKA_Radio.setText(LanguageManager.getText("no"));
        
        freeFluidLabel.setText(LanguageManager.getText("freeFluid"));
        yesPresenceFreeLiquid_Radio.setText(LanguageManager.getText("yes"));
        noPresenceFreeLiquid_Radio.setText(LanguageManager.getText("no"));
        
        goToBio.setText(LanguageManager.getText("goBio"));
        
        this.setTitle(LanguageManager.getText("usgScreen"));
    }
}
