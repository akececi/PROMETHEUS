
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author AYBUKE KECECI KANMAZ
 */
public class PhysicalExScreen extends javax.swing.JFrame {

    /**
     * Creates new form PhysicalExScreen
     */
    FileOperation io = new FileOperation();
    final JPopupMenu menu = new JPopupMenu("Menu");

    public PhysicalExScreen() {
        initComponents();
        
        menu.add("TR").addActionListener((e) -> {
            LanguageManager.setLanguage("tr");
            updateTexts();
        });
        menu.add("EN").addActionListener((e) -> {
            LanguageManager.setLanguage("en");
            updateTexts();
        });
        
        defenceLabel.setText(LanguageManager.getText("defence"));
        defenceYesRadio.setText(LanguageManager.getText("yes"));
        defenceNoRadio.setText(LanguageManager.getText("no"));
        
        reboundLabel.setText(LanguageManager.getText("rebound"));
        reboundYesRadio.setText(LanguageManager.getText("yes"));
        reboundNoRadio.setText(LanguageManager.getText("no"));
        
        tendernessLabel.setText(LanguageManager.getText("tenderness"));
        sensibilityNoRadio.setText(LanguageManager.getText("no"));
        sensibilityYesRadio.setText(LanguageManager.getText("yes"));
        
        goToUSG.setText(LanguageManager.getText("goUltrasound"));
        this.setTitle(LanguageManager.getText("physicalScreen"));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        settings = new javax.swing.JLabel();
        defenceLabel = new javax.swing.JLabel();
        reboundLabel = new javax.swing.JLabel();
        tendernessLabel = new javax.swing.JLabel();
        defenceYesRadio = new javax.swing.JRadioButton();
        defenceNoRadio = new javax.swing.JRadioButton();
        reboundYesRadio = new javax.swing.JRadioButton();
        reboundNoRadio = new javax.swing.JRadioButton();
        sensibilityYesRadio = new javax.swing.JRadioButton();
        sensibilityNoRadio = new javax.swing.JRadioButton();
        goToUSG = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        settings.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/settings.png"))); // NOI18N
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("Bundle"); // NOI18N
        settings.setText(bundle.getString("PhysicalExScreen.settings.text")); // NOI18N
        settings.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                settingsMouseClicked(evt);
            }
        });
        getContentPane().add(settings, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 20, 40, 40));

        defenceLabel.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        defenceLabel.setForeground(new java.awt.Color(0, 64, 64));
        defenceLabel.setText(bundle.getString("PhysicalExScreen.tendernessLabel.text")); // NOI18N
        defenceLabel.setToolTipText(bundle.getString("PhysicalExScreen.reboundLabel.toolTipText")); // NOI18N
        getContentPane().add(defenceLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 110, 210, 30));

        reboundLabel.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        reboundLabel.setForeground(new java.awt.Color(0, 64, 64));
        reboundLabel.setText(bundle.getString("PhysicalExScreen.tendernessLabel.text")); // NOI18N
        reboundLabel.setToolTipText(bundle.getString("PhysicalExScreen.reboundLabel.toolTipText")); // NOI18N
        getContentPane().add(reboundLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 160, 210, 30));

        tendernessLabel.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        tendernessLabel.setForeground(new java.awt.Color(0, 64, 64));
        tendernessLabel.setText(bundle.getString("PhysicalExScreen.tendernessLabel.text")); // NOI18N
        tendernessLabel.setToolTipText(bundle.getString("PhysicalExScreen.reboundLabel.toolTipText")); // NOI18N
        getContentPane().add(tendernessLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 210, 210, 30));

        buttonGroup1.add(defenceYesRadio);
        defenceYesRadio.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        defenceYesRadio.setForeground(new java.awt.Color(0, 64, 64));
        defenceYesRadio.setText(bundle.getString("PhysicalExScreen.defenceYesRadio.text")); // NOI18N
        defenceYesRadio.setToolTipText(bundle.getString("PhysicalExScreen.defenceYesRadio.toolTipText")); // NOI18N
        defenceYesRadio.setOpaque(false);
        defenceYesRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                defenceYesRadioActionPerformed(evt);
            }
        });
        getContentPane().add(defenceYesRadio, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 110, -1, 30));

        buttonGroup1.add(defenceNoRadio);
        defenceNoRadio.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        defenceNoRadio.setForeground(new java.awt.Color(0, 64, 64));
        defenceNoRadio.setText(bundle.getString("PhysicalExScreen.defenceNoRadio.text")); // NOI18N
        defenceNoRadio.setToolTipText(bundle.getString("PhysicalExScreen.defenceNoRadio.toolTipText")); // NOI18N
        defenceNoRadio.setOpaque(false);
        defenceNoRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                defenceNoRadioActionPerformed(evt);
            }
        });
        getContentPane().add(defenceNoRadio, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 110, -1, 30));

        buttonGroup2.add(reboundYesRadio);
        reboundYesRadio.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        reboundYesRadio.setForeground(new java.awt.Color(0, 64, 64));
        reboundYesRadio.setText(bundle.getString("PhysicalExScreen.reboundYesRadio.text")); // NOI18N
        reboundYesRadio.setToolTipText(bundle.getString("PhysicalExScreen.reboundYesRadio.toolTipText")); // NOI18N
        reboundYesRadio.setOpaque(false);
        reboundYesRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reboundYesRadioActionPerformed(evt);
            }
        });
        getContentPane().add(reboundYesRadio, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 160, -1, 30));

        buttonGroup2.add(reboundNoRadio);
        reboundNoRadio.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        reboundNoRadio.setForeground(new java.awt.Color(0, 64, 64));
        reboundNoRadio.setText(bundle.getString("PhysicalExScreen.defenceNoRadio.text")); // NOI18N
        reboundNoRadio.setToolTipText(bundle.getString("PhysicalExScreen.reboundNoRadio.toolTipText")); // NOI18N
        reboundNoRadio.setOpaque(false);
        reboundNoRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reboundNoRadioActionPerformed(evt);
            }
        });
        getContentPane().add(reboundNoRadio, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 160, -1, 30));

        buttonGroup3.add(sensibilityYesRadio);
        sensibilityYesRadio.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        sensibilityYesRadio.setForeground(new java.awt.Color(0, 64, 64));
        sensibilityYesRadio.setText(bundle.getString("PhysicalExScreen.sensibilityYesRadio.text")); // NOI18N
        sensibilityYesRadio.setToolTipText(bundle.getString("PhysicalExScreen.sensibilityYesRadio.toolTipText")); // NOI18N
        sensibilityYesRadio.setOpaque(false);
        sensibilityYesRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sensibilityYesRadioActionPerformed(evt);
            }
        });
        getContentPane().add(sensibilityYesRadio, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 210, -1, 30));

        buttonGroup3.add(sensibilityNoRadio);
        sensibilityNoRadio.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        sensibilityNoRadio.setForeground(new java.awt.Color(0, 64, 64));
        sensibilityNoRadio.setText(bundle.getString("PhysicalExScreen.defenceNoRadio.text")); // NOI18N
        sensibilityNoRadio.setToolTipText(bundle.getString("PhysicalExScreen.sensibilityNoRadio.toolTipText")); // NOI18N
        sensibilityNoRadio.setOpaque(false);
        sensibilityNoRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sensibilityNoRadioActionPerformed(evt);
            }
        });
        getContentPane().add(sensibilityNoRadio, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 210, -1, 30));

        goToUSG.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        goToUSG.setForeground(new java.awt.Color(0, 64, 64));
        goToUSG.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/usg_.png"))); // NOI18N
        goToUSG.setText(bundle.getString("PhysicalExScreen.goToUSG.text")); // NOI18N
        goToUSG.setToolTipText(bundle.getString("PhysicalExScreen.goToUSG.toolTipText")); // NOI18N
        goToUSG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goToUSGActionPerformed(evt);
            }
        });
        getContentPane().add(goToUSG, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 280, 480, 45));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/hospital-background-1952.jpg"))); // NOI18N
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 685, 382));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void goToUSGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goToUSGActionPerformed
        USG_Screen usg = new USG_Screen();

        if ((defenceYesRadio.isSelected() || defenceNoRadio.isSelected())
                && (reboundYesRadio.isSelected() || reboundNoRadio.isSelected())
                && (sensibilityYesRadio.isSelected() || sensibilityNoRadio.isSelected())) {
            io.writePhysicalExFile();
            ImageIcon img = new ImageIcon("src\\images\\usg_.png");
            usg.setIconImage(img.getImage());
            usg.setVisible(true);
            this.dispose();
        } else
            JOptionPane.showMessageDialog(null, "Check your choice!", "WARNING", JOptionPane.WARNING_MESSAGE);
    }//GEN-LAST:event_goToUSGActionPerformed

    private void defenceYesRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_defenceYesRadioActionPerformed
        io.defence = String.valueOf(1);
    }//GEN-LAST:event_defenceYesRadioActionPerformed

    private void defenceNoRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_defenceNoRadioActionPerformed
        io.defence = String.valueOf(0);
    }//GEN-LAST:event_defenceNoRadioActionPerformed

    private void reboundYesRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reboundYesRadioActionPerformed
        io.rebound = String.valueOf(1);
    }//GEN-LAST:event_reboundYesRadioActionPerformed

    private void reboundNoRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reboundNoRadioActionPerformed
        io.rebound = String.valueOf(0);
    }//GEN-LAST:event_reboundNoRadioActionPerformed

    private void sensibilityYesRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sensibilityYesRadioActionPerformed
        io.sensibility = String.valueOf(1);
    }//GEN-LAST:event_sensibilityYesRadioActionPerformed

    private void sensibilityNoRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sensibilityNoRadioActionPerformed
        io.sensibility = String.valueOf(0);
    }//GEN-LAST:event_sensibilityNoRadioActionPerformed

    private void settingsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_settingsMouseClicked
        menu.show(settings, settings.getWidth() / 2, settings.getHeight() / 2);
    }//GEN-LAST:event_settingsMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PhysicalExScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PhysicalExScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PhysicalExScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PhysicalExScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PhysicalExScreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JLabel defenceLabel;
    private javax.swing.JRadioButton defenceNoRadio;
    private javax.swing.JRadioButton defenceYesRadio;
    private javax.swing.JButton goToUSG;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel reboundLabel;
    private javax.swing.JRadioButton reboundNoRadio;
    private javax.swing.JRadioButton reboundYesRadio;
    private javax.swing.JRadioButton sensibilityNoRadio;
    private javax.swing.JRadioButton sensibilityYesRadio;
    private javax.swing.JLabel settings;
    private javax.swing.JLabel tendernessLabel;
    // End of variables declaration//GEN-END:variables

    private void updateTexts() {
        defenceLabel.setText(LanguageManager.getText("defence"));
        defenceYesRadio.setText(LanguageManager.getText("yes"));
        defenceNoRadio.setText(LanguageManager.getText("no"));
        
        reboundLabel.setText(LanguageManager.getText("rebound"));
        reboundYesRadio.setText(LanguageManager.getText("yes"));
        reboundNoRadio.setText(LanguageManager.getText("no"));
        
        tendernessLabel.setText(LanguageManager.getText("tenderness"));
        sensibilityNoRadio.setText(LanguageManager.getText("no"));
        sensibilityYesRadio.setText(LanguageManager.getText("yes"));
        
        goToUSG.setText(LanguageManager.getText("goUltrasound"));
        this.setTitle(LanguageManager.getText("physicalScreen"));
    }
}
