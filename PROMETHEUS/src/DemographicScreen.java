
import java.awt.Image;
import java.time.LocalDate;
import java.time.temporal.ChronoUnit;
import javax.swing.ImageIcon;
import java.time.ZoneId;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author AYBUKE KECECI KANMAZ
 */
public class DemographicScreen extends javax.swing.JFrame {

    /**
     * Creates new form DemographicScreen
     */
    FileOperation io = new FileOperation();
    final JPopupMenu menu = new JPopupMenu("Menu");

    //LanguageManager languageManager = new LanguageManager();
    public DemographicScreen() {
        initComponents();

        menu.add("TR").addActionListener((e) -> {
            LanguageManager.setLanguage("tr");
            updateTexts();
        });
        menu.add("EN").addActionListener((e) -> {
            LanguageManager.setLanguage("en");
            updateTexts();
        });

        //LanguageManager.setLanguage("tr");
        demogZoneLabel.setText(LanguageManager.getText("zoneDemographic"));
        ageLabel.setText(LanguageManager.getText("age"));
        satLabel.setText(LanguageManager.getText("sat"));
        presenceRIALabel.setText(LanguageManager.getText("ria"));
        riaPresenceYesRadio.setText(LanguageManager.getText("yes"));
        riaPresenceNoRadio.setText(LanguageManager.getText("no"));
        IVFLabel.setText(LanguageManager.getText("pregIVF"));
        ivfPregnancyYesRadio.setText(LanguageManager.getText("yes"));
        ivfPregnancyNoRadio.setText(LanguageManager.getText("no"));
        sympZoneLabel.setText(LanguageManager.getText("zoneSymptoms"));
        pelvicPainLabel.setText(LanguageManager.getText("pelvicPain"));
        pelvicPainYesRadio.setText(LanguageManager.getText("yes"));
        pelvicPainNoRadio.setText(LanguageManager.getText("no"));
        bleedingLabel.setText(LanguageManager.getText("bleeding"));
        bleedingYesRadio.setText(LanguageManager.getText("yes"));
        bleedingNoRadio.setText(LanguageManager.getText("no"));
        goToPhysical.setText(LanguageManager.getText("goPhysical"));
        this.setTitle(LanguageManager.getText("demogScreen"));


    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        riaPresenceRadioGroup = new javax.swing.ButtonGroup();
        ivfPregnancyRadioGroup = new javax.swing.ButtonGroup();
        pelvicPainRadioGroup = new javax.swing.ButtonGroup();
        bleedingRadioGroup = new javax.swing.ButtonGroup();
        demogZoneLabel = new javax.swing.JLabel();
        settings = new javax.swing.JLabel();
        ageLabel = new javax.swing.JLabel();
        satLabel = new javax.swing.JLabel();
        presenceRIALabel = new javax.swing.JLabel();
        IVFLabel = new javax.swing.JLabel();
        pelvicPainLabel = new javax.swing.JLabel();
        sympZoneLabel = new javax.swing.JLabel();
        bleedingLabel = new javax.swing.JLabel();
        riaPresenceYesRadio = new javax.swing.JRadioButton();
        riaPresenceNoRadio = new javax.swing.JRadioButton();
        ivfPregnancyYesRadio = new javax.swing.JRadioButton();
        ivfPregnancyNoRadio = new javax.swing.JRadioButton();
        pelvicPainYesRadio = new javax.swing.JRadioButton();
        pelvicPainNoRadio = new javax.swing.JRadioButton();
        bleedingYesRadio = new javax.swing.JRadioButton();
        bleedingNoRadio = new javax.swing.JRadioButton();
        goToPhysical = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        ageText = new javax.swing.JFormattedTextField();
        satDate = new com.toedter.calendar.JDateChooser();
        jLabel10 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        setSize(new java.awt.Dimension(845, 705));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        demogZoneLabel.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        demogZoneLabel.setForeground(new java.awt.Color(0, 64, 64));
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("Bundle"); // NOI18N
        demogZoneLabel.setText(bundle.getString("DemographicScreen.demogZoneLabel.text")); // NOI18N
        getContentPane().add(demogZoneLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 60, 210, 30));

        settings.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/settings.png"))); // NOI18N
        settings.setText(bundle.getString("DemographicScreen.settings.text")); // NOI18N
        settings.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                settingsMouseClicked(evt);
            }
        });
        getContentPane().add(settings, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 30, 40, 40));

        ageLabel.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        ageLabel.setForeground(new java.awt.Color(0, 64, 64));
        ageLabel.setText(bundle.getString("DemographicScreen.ageLabel.text")); // NOI18N
        getContentPane().add(ageLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 110, 210, 30));

        satLabel.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        satLabel.setForeground(new java.awt.Color(0, 64, 64));
        satLabel.setText(bundle.getString("DemographicScreen.satLabel.text")); // NOI18N
        getContentPane().add(satLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 160, 210, 30));

        presenceRIALabel.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        presenceRIALabel.setForeground(new java.awt.Color(0, 64, 64));
        presenceRIALabel.setText(bundle.getString("DemographicScreen.presenceRIALabel.text")); // NOI18N
        getContentPane().add(presenceRIALabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 210, 210, 30));

        IVFLabel.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        IVFLabel.setForeground(new java.awt.Color(0, 64, 64));
        IVFLabel.setText(bundle.getString("DemographicScreen.IVFLabel.text")); // NOI18N
        getContentPane().add(IVFLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 260, 210, 30));

        pelvicPainLabel.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        pelvicPainLabel.setForeground(new java.awt.Color(0, 64, 64));
        pelvicPainLabel.setText(bundle.getString("DemographicScreen.pelvicPainLabel.text")); // NOI18N
        getContentPane().add(pelvicPainLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 450, 210, 30));

        sympZoneLabel.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        sympZoneLabel.setForeground(new java.awt.Color(0, 64, 64));
        sympZoneLabel.setText(bundle.getString("DemographicScreen.sympZoneLabel.text")); // NOI18N
        getContentPane().add(sympZoneLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 400, 210, 30));

        bleedingLabel.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        bleedingLabel.setForeground(new java.awt.Color(0, 64, 64));
        bleedingLabel.setText(bundle.getString("DemographicScreen.bleedingLabel.text")); // NOI18N
        getContentPane().add(bleedingLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 500, 210, 30));

        riaPresenceRadioGroup.add(riaPresenceYesRadio);
        riaPresenceYesRadio.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        riaPresenceYesRadio.setForeground(new java.awt.Color(0, 64, 64));
        riaPresenceYesRadio.setText(bundle.getString("DemographicScreen.riaPresenceYesRadio.text")); // NOI18N
        riaPresenceYesRadio.setOpaque(false);
        riaPresenceYesRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                riaPresenceYesRadioActionPerformed(evt);
            }
        });
        getContentPane().add(riaPresenceYesRadio, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 210, -1, -1));

        riaPresenceRadioGroup.add(riaPresenceNoRadio);
        riaPresenceNoRadio.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        riaPresenceNoRadio.setForeground(new java.awt.Color(0, 64, 64));
        riaPresenceNoRadio.setText(bundle.getString("DemographicScreen.riaPresenceNoRadio.text")); // NOI18N
        riaPresenceNoRadio.setToolTipText(bundle.getString("DemographicScreen.riaPresenceNoRadio.toolTipText")); // NOI18N
        riaPresenceNoRadio.setOpaque(false);
        riaPresenceNoRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                riaPresenceNoRadioActionPerformed(evt);
            }
        });
        getContentPane().add(riaPresenceNoRadio, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 210, -1, -1));

        ivfPregnancyRadioGroup.add(ivfPregnancyYesRadio);
        ivfPregnancyYesRadio.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        ivfPregnancyYesRadio.setForeground(new java.awt.Color(0, 64, 64));
        ivfPregnancyYesRadio.setText(bundle.getString("DemographicScreen.ivfPregnancyYesRadio.text")); // NOI18N
        ivfPregnancyYesRadio.setOpaque(false);
        ivfPregnancyYesRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ivfPregnancyYesRadioActionPerformed(evt);
            }
        });
        getContentPane().add(ivfPregnancyYesRadio, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 260, -1, -1));

        ivfPregnancyRadioGroup.add(ivfPregnancyNoRadio);
        ivfPregnancyNoRadio.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        ivfPregnancyNoRadio.setForeground(new java.awt.Color(0, 64, 64));
        ivfPregnancyNoRadio.setText(bundle.getString("DemographicScreen.ivfPregnancyYesRadio.text")); // NOI18N
        ivfPregnancyNoRadio.setToolTipText(bundle.getString("DemographicScreen.ivfPregnancyNoRadio.toolTipText")); // NOI18N
        ivfPregnancyNoRadio.setOpaque(false);
        ivfPregnancyNoRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ivfPregnancyNoRadioActionPerformed(evt);
            }
        });
        getContentPane().add(ivfPregnancyNoRadio, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 260, -1, -1));

        pelvicPainRadioGroup.add(pelvicPainYesRadio);
        pelvicPainYesRadio.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        pelvicPainYesRadio.setForeground(new java.awt.Color(0, 64, 64));
        pelvicPainYesRadio.setText(bundle.getString("DemographicScreen.ivfPregnancyYesRadio.text")); // NOI18N
        pelvicPainYesRadio.setToolTipText(bundle.getString("DemographicScreen.pelvicPainYesRadio.toolTipText")); // NOI18N
        pelvicPainYesRadio.setOpaque(false);
        pelvicPainYesRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pelvicPainYesRadioActionPerformed(evt);
            }
        });
        getContentPane().add(pelvicPainYesRadio, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 450, -1, -1));

        pelvicPainRadioGroup.add(pelvicPainNoRadio);
        pelvicPainNoRadio.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        pelvicPainNoRadio.setForeground(new java.awt.Color(0, 64, 64));
        pelvicPainNoRadio.setText(bundle.getString("DemographicScreen.ivfPregnancyYesRadio.text")); // NOI18N
        pelvicPainNoRadio.setToolTipText(bundle.getString("DemographicScreen.pelvicPainNoRadio.toolTipText")); // NOI18N
        pelvicPainNoRadio.setOpaque(false);
        pelvicPainNoRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pelvicPainNoRadioActionPerformed(evt);
            }
        });
        getContentPane().add(pelvicPainNoRadio, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 450, -1, -1));

        bleedingRadioGroup.add(bleedingYesRadio);
        bleedingYesRadio.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        bleedingYesRadio.setForeground(new java.awt.Color(0, 64, 64));
        bleedingYesRadio.setText(bundle.getString("DemographicScreen.ivfPregnancyYesRadio.text")); // NOI18N
        bleedingYesRadio.setToolTipText(bundle.getString("DemographicScreen.bleedingYesRadio.toolTipText")); // NOI18N
        bleedingYesRadio.setOpaque(false);
        bleedingYesRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bleedingYesRadioActionPerformed(evt);
            }
        });
        getContentPane().add(bleedingYesRadio, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 500, -1, -1));

        bleedingRadioGroup.add(bleedingNoRadio);
        bleedingNoRadio.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        bleedingNoRadio.setForeground(new java.awt.Color(0, 64, 64));
        bleedingNoRadio.setText(bundle.getString("DemographicScreen.ivfPregnancyYesRadio.text")); // NOI18N
        bleedingNoRadio.setToolTipText(bundle.getString("DemographicScreen.bleedingNoRadio.toolTipText")); // NOI18N
        bleedingNoRadio.setOpaque(false);
        bleedingNoRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bleedingNoRadioActionPerformed(evt);
            }
        });
        getContentPane().add(bleedingNoRadio, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 500, -1, -1));

        goToPhysical.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        goToPhysical.setForeground(new java.awt.Color(0, 64, 64));
        goToPhysical.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/phy_.png"))); // NOI18N
        goToPhysical.setText(bundle.getString("DemographicScreen.goToPhysical.text")); // NOI18N
        goToPhysical.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goToPhysicalActionPerformed(evt);
            }
        });
        getContentPane().add(goToPhysical, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 580, 620, 45));
        getContentPane().add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 345, 770, 10));

        ageText.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        getContentPane().add(ageText, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 110, 290, 30));

        satDate.setToolTipText(bundle.getString("DemographicScreen.satDate.toolTipText")); // NOI18N
        satDate.setDateFormatString(bundle.getString("DemographicScreen.satDate.dateFormatString")); // NOI18N
        getContentPane().add(satDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 160, 290, 30));

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/hospital-background-1952.jpg"))); // NOI18N
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 845, 705));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void updateTexts() {
        demogZoneLabel.setText(LanguageManager.getText("zoneDemographic"));
        ageLabel.setText(LanguageManager.getText("age"));
        satLabel.setText(LanguageManager.getText("sat"));
        presenceRIALabel.setText(LanguageManager.getText("ria"));
        riaPresenceYesRadio.setText(LanguageManager.getText("yes"));
        riaPresenceNoRadio.setText(LanguageManager.getText("no"));
        IVFLabel.setText(LanguageManager.getText("pregIVF"));
        ivfPregnancyYesRadio.setText(LanguageManager.getText("yes"));
        ivfPregnancyNoRadio.setText(LanguageManager.getText("no"));
        sympZoneLabel.setText(LanguageManager.getText("zoneSymptoms"));
        pelvicPainLabel.setText(LanguageManager.getText("pelvicPain"));
        pelvicPainYesRadio.setText(LanguageManager.getText("yes"));
        pelvicPainNoRadio.setText(LanguageManager.getText("no"));
        bleedingLabel.setText(LanguageManager.getText("bleeding"));
        bleedingYesRadio.setText(LanguageManager.getText("yes"));
        bleedingNoRadio.setText(LanguageManager.getText("no"));
        goToPhysical.setText(LanguageManager.getText("goPhysical"));
        DemographicScreen ds = new DemographicScreen();
        ds.setTitle(LanguageManager.getText("demogScreen"));
    }
    
    private void goToPhysicalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goToPhysicalActionPerformed
        if (((!ageText.getText().isEmpty()) && (!ageText.getText().trim().matches(""))) && satDate.getDate() != null) {
            //if (((!ageText.getText().isEmpty()) && (!ageText.getText().trim().matches(""))) && ((!satText.getText().isEmpty()) && (!ageText.getText().trim().matches("")))) {
            io.age = ageText.getText();
            //io.sat = satText.getText();

            LocalDate lmpDate = satDate.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
            LocalDate currentDate = LocalDate.now();

            // Calculate the gestational age in days
            long totalDays = ChronoUnit.DAYS.between(lmpDate, currentDate) + 1;
            io.sat = Long.toString(totalDays);

            PhysicalExScreen pes = new PhysicalExScreen();

            if ((riaPresenceYesRadio.isSelected() || riaPresenceNoRadio.isSelected()) && (ivfPregnancyYesRadio.isSelected() || ivfPregnancyNoRadio.isSelected())
                    && (pelvicPainYesRadio.isSelected() || pelvicPainNoRadio.isSelected())
                    && (bleedingYesRadio.isSelected() || bleedingNoRadio.isSelected())) {
                io.writeDemoFile();
                ImageIcon img = new ImageIcon("src\\images\\phy_.png");
                pes.setIconImage(img.getImage());
                pes.setVisible(true);
                this.dispose();
            } else {
                JOptionPane.showMessageDialog(null, "Check your choice!", "WARNING", JOptionPane.WARNING_MESSAGE);
            }
        } else
            JOptionPane.showMessageDialog(null, "Fill in the necessary empty spaces!", "WARNING", JOptionPane.WARNING_MESSAGE);
    }//GEN-LAST:event_goToPhysicalActionPerformed

    private void riaPresenceYesRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_riaPresenceYesRadioActionPerformed
        io.riaPresence = String.valueOf(1);
    }//GEN-LAST:event_riaPresenceYesRadioActionPerformed

    private void riaPresenceNoRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_riaPresenceNoRadioActionPerformed
        io.riaPresence = String.valueOf(0);
    }//GEN-LAST:event_riaPresenceNoRadioActionPerformed

    private void ivfPregnancyYesRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ivfPregnancyYesRadioActionPerformed
        io.ivfPregnancy = String.valueOf(1);
    }//GEN-LAST:event_ivfPregnancyYesRadioActionPerformed

    private void ivfPregnancyNoRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ivfPregnancyNoRadioActionPerformed
        io.ivfPregnancy = String.valueOf(0);
    }//GEN-LAST:event_ivfPregnancyNoRadioActionPerformed

    private void pelvicPainYesRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pelvicPainYesRadioActionPerformed
        io.pelvicPain = String.valueOf(1);
    }//GEN-LAST:event_pelvicPainYesRadioActionPerformed

    private void pelvicPainNoRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pelvicPainNoRadioActionPerformed
        io.pelvicPain = String.valueOf(0);
    }//GEN-LAST:event_pelvicPainNoRadioActionPerformed

    private void bleedingYesRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bleedingYesRadioActionPerformed
        io.bleeding = String.valueOf(1);
    }//GEN-LAST:event_bleedingYesRadioActionPerformed

    private void bleedingNoRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bleedingNoRadioActionPerformed
        io.bleeding = String.valueOf(0);
    }//GEN-LAST:event_bleedingNoRadioActionPerformed

    private void settingsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_settingsMouseClicked
        menu.show(settings, settings.getWidth() / 2, settings.getHeight() / 2);
    }//GEN-LAST:event_settingsMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DemographicScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DemographicScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DemographicScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DemographicScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DemographicScreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel IVFLabel;
    private javax.swing.JLabel ageLabel;
    private javax.swing.JFormattedTextField ageText;
    private javax.swing.JLabel bleedingLabel;
    private javax.swing.JRadioButton bleedingNoRadio;
    private javax.swing.ButtonGroup bleedingRadioGroup;
    private javax.swing.JRadioButton bleedingYesRadio;
    private javax.swing.JLabel demogZoneLabel;
    private javax.swing.JButton goToPhysical;
    private javax.swing.JRadioButton ivfPregnancyNoRadio;
    private javax.swing.ButtonGroup ivfPregnancyRadioGroup;
    private javax.swing.JRadioButton ivfPregnancyYesRadio;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel pelvicPainLabel;
    private javax.swing.JRadioButton pelvicPainNoRadio;
    private javax.swing.ButtonGroup pelvicPainRadioGroup;
    private javax.swing.JRadioButton pelvicPainYesRadio;
    private javax.swing.JLabel presenceRIALabel;
    private javax.swing.JRadioButton riaPresenceNoRadio;
    private javax.swing.ButtonGroup riaPresenceRadioGroup;
    private javax.swing.JRadioButton riaPresenceYesRadio;
    private com.toedter.calendar.JDateChooser satDate;
    private javax.swing.JLabel satLabel;
    private javax.swing.JLabel settings;
    private javax.swing.JLabel sympZoneLabel;
    // End of variables declaration//GEN-END:variables
}
